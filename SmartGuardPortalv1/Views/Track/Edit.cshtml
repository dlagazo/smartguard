@model SmartGuardPortalv1.Models.Place

@{
    ViewBag.Title = "Edit";
    int userId = (int)WebSecurity.CurrentUserId;
}

<style>
  #map {
    width: 500px;
    height: 400px;
    background-color: #CCC;
  }
</style>
<script src="https://maps.googleapis.com/maps/api/js"></script>
    <script>
      var marker, map;
      function initialize() {
        var mapCanvas = document.getElementById('map');
        var mapOptions = {
          center: new google.maps.LatLng(@Model.PlaceLat, @Model.PlaceLong),
          zoom: 16,
          mapTypeId: google.maps.MapTypeId.ROADMAP
        }

        map = new google.maps.Map(mapCanvas, mapOptions);
        marker = new google.maps.Marker({ position: map.getCenter(), map: map });
        var lat = document.getElementById("PlaceLat");
        var lng = document.getElementById("PlaceLong");
        
        google.maps.event.addListener(map, 'click', function (event) {
            alert("Latitude: " + event.latLng.lat() + " " + ", longitude: " + event.latLng.lng());
            lat.value = event.latLng.lat();
            lng.value = event.latLng.lng();
            marker.setPosition(event.latLng);

        });
        

        
      }
      google.maps.event.addDomListener(window, 'load', initialize);
      
</script>


<b> @Html.ActionLink("Dashboard", "AllModules", "Home") > @Html.ActionLink("Navigation", "Index", "Place") > Edit Navigation</b>
<br />
<br />


<table>
    <tr>
        <td>
            <div id="map"></div>

        </td>
        <td>
            @using (Html.BeginForm()) 
            {
                @Html.AntiForgeryToken()
                @Html.ValidationSummary(true)

                <fieldset>
                    <legend>Place</legend>

                    @Html.HiddenFor(model => model.PlaceId)
                    <input type="hidden" value="@userId" id="fkUserId" name="fkUserId"/>
                    <div class="editor-label">
                        @Html.LabelFor(model => model.PlaceLat)
                    </div>
                    <div class="editor-field">
                        @Html.EditorFor(model => model.PlaceLat)
                        @Html.ValidationMessageFor(model => model.PlaceLat)
                    </div>
                    <div class="editor-label">
                        @Html.LabelFor(model => model.PlaceLong)
                    </div>
                    <div class="editor-field">
                        @Html.EditorFor(model => model.PlaceLong)
                        @Html.ValidationMessageFor(model => model.PlaceLong)
                    </div>
                    <div class="editor-label">
                        @Html.LabelFor(model => model.PlaceName)
                    </div>
                    <div class="editor-field">
                        @{
                            if (Model.PlaceName != "Home")
                            {
                                @Html.EditorFor(model => model.PlaceName)
                            }
                            else
                            {
                                @Html.DisplayFor(model => model.PlaceName)
                                @Html.HiddenFor(model => model.PlaceName)
                            }
                        }
                        @Html.ValidationMessageFor(model => model.PlaceName)
                    </div>
        
                    <p>
                        <input type="submit" value="Save" />
                    </p>
                </fieldset>
            }
        </td>
    </tr>

</table>



<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
