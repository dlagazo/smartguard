@model SmartGuardPortalv1.Models.UserProfile

@{
    
    string user = ""; 
    SmartGuardPortalv1.Models.UsersContext context = new SmartGuardPortalv1.Models.UsersContext();
    int userId = (int)WebSecurity.CurrentUserId;
    SmartGuardPortalv1.Models.UserProfile profile = context.UserProfiles.Find(userId);
    SmartGuardPortalv1.Models.UserInformation info = context.UserInfos.FirstOrDefault(m => m.fkUserId == userId);
    string title = "";
    if (info.FkTitle == 0)
    {
        title = "Mr.";
    }
    else if (info.FkTitle == 1)
    {
        title = "Mrs.";
    }
    else if (info.FkTitle == 2)
    {
        title = "Ms.";
    }
    user = title + " " + profile.FirstName + " " + profile.LastName + "!"; 
}

<b>@Html.ActionLink("Dashboard", "Index", "Home") > Account Details</b>
<br />
<br />
<fieldset>
    <legend>Account Details</legend>

    <div class="display-label">
        <b>First Name:</b> @Html.DisplayFor(model => model.FirstName) 
    </div>
    <div class="display-field">
        <b>Last Name:</b> @Html.DisplayFor(model => model.LastName)
    </div>
    <div class="display-label">
        <b>User Name:</b> @Html.DisplayFor(model => model.UserName)
    </div>
    <div class="display-label">
        <b>Birth Date:</b> @info.BirthDate
    </div>
    <div class="display-label">
        <b>Gender:</b> @{ if (info.Gender == true) { <text>Female</text> } else {<text>Male</text> }}
    </div>
    @{
        if(Roles.IsUserInRole("User"))
        {
            <div class="display-label">
                <b>Hand:</b> @{ if (info.Hand == true) { <text>Left</text> } else {<text>Right</text> }}
            </div>
        }
    }
    
    <div class="display-label">
        <b>Email:</b> @Html.DisplayFor(model => model.Email)
    </div>
    <div class="display-label">
        <b>Country:</b> @Html.DisplayFor(model => model.Country)
    </div>
    <div class="display-label">
        <b>Address:</b> @info.Address
    </div>
    <div class="display-label">
        <b>City:</b> @info.City
    </div>
    <div class="display-label">
        <b>Zip Code:</b> @info.Zip
    </div>
    <div class="display-label">
        <b>Phone number:</b> @info.Phone
        <br />
        userid: @userId
    </div>
   
    
</fieldset>
<fieldset>
    <legend>My Active Subscriptions</legend>
    <div>
        @{
            if (Roles.IsUserInRole("User"))
            {
                List<SmartGuardPortalv1.Models.Purchase> subscriptions = context.Purchases.Where(i => i.fkUserId == userId).ToList();
                if(subscriptions.Count == 0)
                {
                    <text>You have no active subscriptions. Please order <a href="/ContactUs/Create">here</a>.</text>
                }
                else
                {
                    foreach(var subscription in subscriptions)
                    {
                        if(subscription.status == 0)
                        {
                            SmartGuardPortalv1.Models.Shop product = context.Shops.Find(subscription.fkShopId);
                            <text>@product.title &euro;@product.amount</text>
                        
                        
                            if (product.costType == 4)
                            {
                                <text>per month</text>
                            }
                            <br />
                        }
                        
                    }
                    <br />
                    <text>View your Statement of Account <a href="/Purchases/Details">here</a></text>
                    <br />
                    <text>If you want to change your subscription, please order <a href="/ContactUs/Create">here</a></text>
                }
            }
        }
    </div>
</fieldset>
<p>
    
    @{
        
        <br />
        if(Roles.GetRolesForUser(WebSecurity.CurrentUserName).Contains("Contact"))
        {
            <text>My Contact Schedule:</text>
            string sched = context.ContactSchedules.Where(i => i.fkUserId == userId).First().ContactSchedules;
            try
            {
                string[] parsedSched = sched.Split(',');
            
                <table>
                    <tr>
                        <td>Sunday</td>
                        <td>Monday</td>
                        <td>Tuesday</td>
                        <td>Wednesday</td>
                        <td>Thursday</td>
                        <td>Friday</td>
                        <td>Saturday</td>
                    </tr>
                    <tr valign="top">
                        <td>
                            @foreach (string str in parsedSched)
                            {
                                if (str.Split(' ')[0] == "SUN")
                                {
                                    <text>@str.Split(' ')[1]</text>
                                    <br />
                                }
                            }
                        </td>
                        <td>
                            @foreach (string str in parsedSched)
                            {
                                if (str.Split(' ')[0] == "MON")
                                {
                                    <text>@str.Split(' ')[1]</text>
                                    <br />
                                }
                            }
                        </td>
                        <td>
                            @foreach (string str in parsedSched)
                            {
                                if (str.Split(' ')[0] == "TUE")
                                {
                                    <text>@str.Split(' ')[1]</text>
                                    <br />
                                }
                            }
                        </td>
                        <td>
                            @foreach (string str in parsedSched)
                            {
                                if (str.Split(' ')[0] == "WED")
                                {
                                    <text>@str.Split(' ')[1]</text>
                                    <br />
                                }
                            }
                        </td>
                        <td>
                            @foreach (string str in parsedSched)
                            {
                                if (str.Split(' ')[0] == "THU")
                                {
                                    <text>@str.Split(' ')[1]</text>
                                    <br />
                                }
                            }
                        </td>
                        <td>
                            @foreach (string str in parsedSched)
                            {
                                if (str.Split(' ')[0] == "FRI")
                                {
                                    <text>@str.Split(' ')[1]</text>
                                    <br />
                                }
                            }
                        </td>
                        <td>
                            @foreach (string str in parsedSched)
                            {
                                if (str.Split(' ')[0] == "SAT")
                                {
                                    <text>@str.Split(' ')[1]</text>
                                    <br />
                                }
                            }
                        </td>
                    
                    </tr>
                </table>
            }
            catch(Exception ex)
            {
            }
            <br />
            
            
                bool contactOutside = context.ContactSchedules.Where(i => i.fkUserId == userId).First().canContactOutsideSched;
                if(contactOutside) 
                {
                    <text>Can contact outside schedule: Yes </text>
                }
                else
                {
                    <text>Can contact outside schedule: No </text>
                }
            
            <br />
            <br />
            @Html.ActionLink("Edit schedule", "Edit", "ContactSchedule", new { id=Model.UserId }, null) <text>|</text>
        }
    }
    @Html.ActionLink("Edit profile", "Edit", new { id=Model.UserId }) |
    
    @Html.ActionLink("Change password", "Manage", "Account", routeValues: null, htmlAttributes: new { @class = "username", title = "Manage" })
        
</p>
