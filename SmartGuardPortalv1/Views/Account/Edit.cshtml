
<script type="text/javascript" src="@Url.Content("~/Content/js/pikaday.js")"></script>
<link rel="stylesheet" href="@Url.Content("~/Content/css/pikaday.css")" />

@model SmartGuardPortalv1.Models.RegisterModel
@{
    
    int loginType = Request.Params["login_type"].AsInt();
    var listItems = new List<SelectListItem> 
    { 
              new SelectListItem { Text = "Mr.", Value = "0" }, 
              new SelectListItem { Text = "Ms.", Value = "1" },
              new SelectListItem { Text = "Mrs.", Value = "2" }, 
              new SelectListItem { Text = "Dr.", Value = "3" },
    };
    
    var listGender = new List<SelectListItem> 
    { 
              new SelectListItem { Text = "Male", Value = "false" }, 
              new SelectListItem { Text = "Female", Value = "true" },
              
    };

    var listHand = new List<SelectListItem> 
    { 
              new SelectListItem { Text = "Right", Value = "false" }, 
              new SelectListItem { Text = "Left", Value = "true" },
              
    };

    var listCountries = new List<SelectListItem>();

    SmartGuardPortalv1.Models.UsersContext db = new SmartGuardPortalv1.Models.UsersContext();
    foreach(SmartGuardPortalv1.Models.Country country in db.Countries)
    {
        listCountries.Add(new SelectListItem{ Text = country.CountryName, Value = country.CountryId});
    }
    
}



<b>@Html.ActionLink("Dashboard", "Index", "Home") > Edit Profile</b>



@using (Html.BeginForm()) {
    @Html.AntiForgeryToken()
    @Html.ValidationSummary()

    <fieldset>
        <legend>Registration Form</legend>
           <table>
               <tr>
                   <td align="top">
                       <table>
                           <tr>
                               <td><b>Title:</b> @Html.DropDownList("FkTitle", new SelectList(listItems, "Value", "Text"))</td>
                           </tr>
                           <tr>  
                                 <td><b>Gender:</b> @Html.DropDownList("Gender", new SelectList(listGender, "Value", "Text"))</td>


                           </tr>
                           
                       </table>

                        <b>Username:</b> @Model.UserName
                        <br />
            
                        
                        <b>Email:</b> @Model.Email
                        @Html.HiddenFor(m => m.Email)
                        <br />
                        <b>Last Name:</b> @Html.TextBoxFor(m => m.LastName)
                        <br />
                        <b>First Name:</b> @Html.TextBoxFor(m => m.FirstName)
                        <br />
                        <b>Birthdate:</b>
                        
                        @Html.TextBoxFor(model => model.BirthDate, new { @Value = Model.BirthDate, id = "datepicker" })
                        @Html.ValidationMessageFor(model => model.BirthDate)
                        
                        
                        
                   </td>
                   <td valign="top">






                       <b>Address:</b> @Html.TextBoxFor(m => m.Address)<br />
                       <b>City:</b> @Html.TextBoxFor(m => m.City)<br />
                       <b>Country:</b> @Html.DropDownList("Country", new SelectList(listCountries, "Value", "Text"))
                       <br />

                       <b>Zip:</b> @Html.TextBoxFor(m => m.Zip)<br />
                       <b>Mobile:</b> @Html.TextBoxFor(m => m.Phone)<br />
                        @{
                            if (Roles.IsUserInRole("User"))
                            {
                                       <b>Hand:</b> @Html.DropDownList("Hand", new SelectList(listHand, "Value", "Text"))
                            
                            }
                        }
                       
                        <br />
                        <input type="submit" value="Save Changes" />
                   </td>
               </tr>

           </table>
            
    </fieldset>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

<script>

    var picker = new Pikaday(
    {
        field: document.getElementById('datepicker'),
        firstDay: 1,
        minDate: new Date(2000, 0, 1),
        maxDate: new Date(2020, 12, 31),
        yearRange: [2000, 2020]
    });

    </script>
