@model IEnumerable<SmartGuardPortalv1.Models.Fall>

@{
    ViewBag.Title = "Index";
    int userId = (int)WebSecurity.CurrentUserId;
}

<b>@Html.ActionLink("Dashboard", "Modules", "Home") > My Fall Alarm</b>
<br />
<br />
<p>With its G-Sensor the Smartguard becomes your fastest emergency system, detecting when you fall down immediately through
movement measurements and asking if everything is okay. If you do not answer or call for help, the Smartguard initiates a 
direct connection to one of your available contact persons informing them about your situation and giving you the possibility to
directly communicate with them.</p>

<p>
Scenario(should be visualised with explanatory SG pictures/screen shots):
Smartguard detects a Fall situation -> SG asks if everything is okay ->
If it was a false alarm you can answer “All OK” or press the green All OK button |
If you fell down and need help you can say “Help” or press the red emergency button
-> In this case the Smartguard starts calling the contact person that is available at this moment and informs them about your situation. Then you can 
instantly talk to them on the phone through the Smartguard's Communication Module(link to the module) and they can decide how to help you 
overcome this situation.</p>

<p>
In every emergency situation it is possible for your contact persons to activate the Smartguard`s camera to check on you, to generate your GPS 
coordinates to send help where you really are and if you activated the Door Management Module(link to module) to open your door to grant access
for emergency services.
Additional to your personal contact persons you should consider to add one of the following emergency services:
ASB Caritas AWO Johanniter Malteser etc. 
Furthermore it is possible in the Contact Person Menu(link to the menu) to add the standard emergency number 112 as final call if the Smartguard 
wasn’t able to reach anyone of your contact persons. This guarantees your
the fastest way possible.</p>

<br />
<br />
<b>My Fall History</b>
<br />
<table>
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.FallTimeStamp)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.FallLat)
        </th>
      
        <th>
            @Html.DisplayNameFor(model => model.FallLong)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.FallResult)
        </th>
        
        
    </tr>

@foreach (var item in Model.Where(i => i.fkUserId == userId)) {
    <tr>
        <td>
             @item.FallTimeStamp
        </td>
        <td>
             @item.FallLat
        </td>
        
        <td>
             @item.FallLong
        </td>
        <td>
             @item.FallResult
        </td>
        
        
        
        <td>
            @Html.ActionLink("Edit", "Edit", new { id=item.FallId }) |
            @* Html.ActionLink("Details", "Details", new { id=item.MemoryId }) | *@
            @Html.ActionLink("Delete", "Delete", new { id=item.FallId })
        </td>
    </tr>
}

</table>

