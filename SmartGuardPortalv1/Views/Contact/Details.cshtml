@model SmartGuardPortalv1.Models.Contact

@{
    ViewBag.Title = "Edit";
    int userId = (int)WebSecurity.CurrentUserId;

    var daysType = new List<SelectListItem>
    {
              new SelectListItem { Text = "Sunday", Value = "SUN" },
              new SelectListItem { Text = "Monday", Value = "MON" },
              new SelectListItem { Text = "Tuesday", Value = "TUE" },
              new SelectListItem { Text = "Wednesday", Value = "WED" },
              new SelectListItem { Text = "Thursday", Value = "THU" },
              new SelectListItem { Text = "Friday", Value = "FRI" },
              new SelectListItem { Text = "Saturday", Value = "SAT" }

              //new SelectListItem { Text = "", Value = "2" },

    };
    
    

    var hoursType = new List<SelectListItem>
    {
              new SelectListItem { Text = "0", Value = "00" },
              new SelectListItem { Text = "1", Value = "01" },
              new SelectListItem { Text = "2", Value = "02" },
              new SelectListItem { Text = "3", Value = "03" },
              new SelectListItem { Text = "4", Value = "04" },
              new SelectListItem { Text = "5", Value = "05" },
              new SelectListItem { Text = "6", Value = "06" },
              new SelectListItem { Text = "7", Value = "07" },
              new SelectListItem { Text = "8", Value = "08" },
              new SelectListItem { Text = "9", Value = "09" },
              new SelectListItem { Text = "10", Value = "10" },
              new SelectListItem { Text = "11", Value = "11" },
              new SelectListItem { Text = "12", Value = "12" },
              new SelectListItem { Text = "13", Value = "13" },
              new SelectListItem { Text = "14", Value = "14" },
              new SelectListItem { Text = "15", Value = "15" },
              new SelectListItem { Text = "16", Value = "16" },
              new SelectListItem { Text = "17", Value = "17" },
              new SelectListItem { Text = "18", Value = "18" },
              new SelectListItem { Text = "19", Value = "19" },
              new SelectListItem { Text = "20", Value = "20" },
              new SelectListItem { Text = "21", Value = "21" },
              new SelectListItem { Text = "22", Value = "22" },
              new SelectListItem { Text = "23", Value = "23" },
              new SelectListItem { Text = "24", Value = "24" }

              

    };

    var minsTensType = new List<SelectListItem>
    {
              new SelectListItem { Text = "0", Value = "0" },
        
             
         
    };

    var minsOnesType = new List<SelectListItem>
    {
              new SelectListItem { Text = "0", Value = "0" }
             

    };

    Dictionary<Int32, Boolean> timeSlots = new Dictionary<int, bool>();
    //int maxRank = db.Contacts.Where(i => i.fkUserId == userId).OrderByDescending(i => i.Rank).FirstOrDefault().Rank;
    List<string> colors = new List<string>();
    List<string> tempColors;
    Dictionary<int, string> colorCode = new Dictionary<int, string>();



    colors.Add("#000");
    colors.Add("#f00");
    colors.Add("#0f0");
    colors.Add("#00f");
    colors.Add("#ff0");
    colors.Add("#f0f");
    colors.Add("#0ff");
    colors.Add("#fff");
    colors.Add("#7f7");
    colors.Add("#f1a");
    colors.Add("#20f");
    colors.Add("c73");

    

    SmartGuardPortalv1.Models.UsersContext context = new SmartGuardPortalv1.Models.UsersContext();
    List<SmartGuardPortalv1.Models.Contact> contacts = context.Contacts.Where(i => i.fkUserId == userId).ToList();
    
}

<script type="text/javascript">
    window.onload = function () {
        var savedSched = "@Model.sched";
        var parsedSched = savedSched.split(',');
        for (i = 0; i < parsedSched.length; i++) {
            var schedContent = parsedSched[i].split(' ');
            if (schedContent[0] == 'SUN')
            {
                var sched = document.getElementById("SunSchedTemp");
                var element = document.createElement("input");

                element.type = "button";
                element.value = parsedSched[i];
                element.id = element.value;
                sched.appendChild(element);

                element.onclick = function () { // Note this is a function
                    //alert("Delete?");


                    if (confirm("Do you want to delete?") == true) {
                        //element.parentNode.removeChile(element);
                        document.getElementById(this.id).remove();

                    } else {

                    }
                };
            }
            else if (schedContent[0] == 'MON') {
                var sched = document.getElementById("MonSchedTemp");
                var element = document.createElement("input");

                element.type = "button";
                element.value = parsedSched[i];
                element.id = element.value;
                sched.appendChild(element);

                element.onclick = function () { // Note this is a function
                    //alert("Delete?");


                    if (confirm("Do you want to delete?") == true) {
                        //element.parentNode.removeChile(element);
                        document.getElementById(this.id).remove();

                    } else {

                    }
                };
            }
            else if (schedContent[0] == 'TUE') {
                var sched = document.getElementById("TueSchedTemp");
                var element = document.createElement("input");

                element.type = "button";
                element.value = parsedSched[i];
                element.id = element.value;
                sched.appendChild(element);

                element.onclick = function () { // Note this is a function
                    //alert("Delete?");


                    if (confirm("Do you want to delete?") == true) {
                        //element.parentNode.removeChile(element);
                        document.getElementById(this.id).remove();

                    } else {

                    }
                };
            }
            else if (schedContent[0] == 'WED') {
                var sched = document.getElementById("WedSchedTemp");
                var element = document.createElement("input");

                element.type = "button";
                element.value = parsedSched[i];
                element.id = element.value;
                sched.appendChild(element);

                element.onclick = function () { // Note this is a function
                    //alert("Delete?");


                    if (confirm("Do you want to delete?") == true) {
                        //element.parentNode.removeChile(element);
                        document.getElementById(this.id).remove();

                    } else {

                    }
                };
            }
            else if (schedContent[0] == 'THU') {
                var sched = document.getElementById("ThuSchedTemp");
                var element = document.createElement("input");

                element.type = "button";
                element.value = parsedSched[i];
                element.id = element.value;
                sched.appendChild(element);

                element.onclick = function () { // Note this is a function
                    //alert("Delete?");


                    if (confirm("Do you want to delete?") == true) {
                        //element.parentNode.removeChile(element);
                        document.getElementById(this.id).remove();

                    } else {

                    }
                };
            }
            else if (schedContent[0] == 'FRI') {
                var sched = document.getElementById("FriSchedTemp");
                var element = document.createElement("input");

                element.type = "button";
                element.value = parsedSched[i];
                element.id = element.value;
                sched.appendChild(element);

                element.onclick = function () { // Note this is a function
                    //alert("Delete?");


                    if (confirm("Do you want to delete?") == true) {
                        //element.parentNode.removeChile(element);
                        document.getElementById(this.id).remove();

                    } else {

                    }
                };
            }
            else if (schedContent[0] == 'SAT') {
                var sched = document.getElementById("SatSchedTemp");
                var element = document.createElement("input");

                element.type = "button";
                element.value = parsedSched[i];
                element.id = element.value;
                sched.appendChild(element);

                element.onclick = function () { // Note this is a function
                    //alert("Delete?");


                    if (confirm("Do you want to delete?") == true) {
                        //element.parentNode.removeChile(element);
                        document.getElementById(this.id).remove();

                    } else {

                    }
                };
            }
        }
    }

    function submitForm() {
        var strSched = "";

        var Sched = document.getElementById("SunSchedTemp");
        var childSched;
        for (i = 0; i < Sched.childNodes.length; i++) {
            childSched = Sched.childNodes[i];
            //allDates.concat(childDate.id, ",");
            if (childSched.value != null) {
                //alert(childSched.value);
                strSched += childSched.value + ",";
            }
            //allDates = childDate.id;
        }

        Sched = document.getElementById("MonSchedTemp");
        for (i = 0; i < Sched.childNodes.length; i++) {
            childSched = Sched.childNodes[i];
            //allDates.concat(childDate.id, ",");
            if (childSched.value != null) {
                //alert(childSched.value);
                strSched += childSched.value + ",";
            }
            //allDates = childDate.id;
        }
        Sched = document.getElementById("TueSchedTemp");
        for (i = 0; i < Sched.childNodes.length; i++) {
            childSched = Sched.childNodes[i];
            //allDates.concat(childDate.id, ",");
            if (childSched.value != null) {
                //alert(childSched.value);
                strSched += childSched.value + ",";
            }
            //allDates = childDate.id;
        }
        Sched = document.getElementById("WedSchedTemp");
        for (i = 0; i < Sched.childNodes.length; i++) {
            childSched = Sched.childNodes[i];
            //allDates.concat(childDate.id, ",");
            if (childSched.value != null) {
                //alert(childSched.value);
                strSched += childSched.value + ",";
            }
            //allDates = childDate.id;
        }
        Sched = document.getElementById("ThuSchedTemp");
        for (i = 0; i < Sched.childNodes.length; i++) {
            childSched = Sched.childNodes[i];
            //allDates.concat(childDate.id, ",");
            if (childSched.value != null) {
                //alert(childSched.value);
                strSched += childSched.value + ",";
            }
            //allDates = childDate.id;
        }
        Sched = document.getElementById("FriSchedTemp");
        for (i = 0; i < Sched.childNodes.length; i++) {
            childSched = Sched.childNodes[i];
            //allDates.concat(childDate.id, ",");
            if (childSched.value != null) {
                //alert(childSched.value);
                strSched += childSched.value + ",";
            }
            //allDates = childDate.id;
        }
        Sched = document.getElementById("SatSchedTemp");
        for (i = 0; i < Sched.childNodes.length; i++) {
            childSched = Sched.childNodes[i];
            //allDates.concat(childDate.id, ",");
            if (childSched.value != null) {
                //alert(childSched.value);
                strSched += childSched.value + ",";
            }
            //allDates = childDate.id;
        }

        document.getElementById("sched").value = strSched;
        document.getElementById("contactSchedulesForm").submit();
    }

    function parseSchedule()
    {
        var br = document.createElement("br");
        var day = document.getElementById("dayType").value;
        var startHr = document.getElementById("startHourType").value;
        var startMinTens = document.getElementById("startMinTensType").value;
        var startMinOnes = document.getElementById("startMinOnesType").value;
        var endHr = document.getElementById("endHourType").value;
        var endMinTens = document.getElementById("endMinTensType").value;
        var endMinOnes = document.getElementById("endMinOnesType").value;

        if (startHr > endHr)
        {
            alert("Invalid schedule");
            return;
        }
        else if (startHr == endHr)
        {
            if (startMinTens > endMinTens)
            {
                alert("Invalid schedule");
                return;
            }
            else if (startMinTens == endMinTens)
            {
                if(startMinOnes >= endMinOnes)
                {
                    alert("Invalid schedule");
                    return;
                }
            }

        }

        if (day == 'SUN') {
            var Sched = document.getElementById("SunSchedTemp");
            var element = document.createElement("input");

            element.type = "button";
            element.value = 'SUN ' + startHr + ":" + startMinTens + startMinOnes + "-" + endHr + ":" + endMinTens + endMinOnes;
            element.id = element.value;
            Sched.appendChild(element);
            Sched.appendChild(br);
        }
        else if (day == 'MON') {
            var Sched = document.getElementById("MonSchedTemp");
            var element = document.createElement("input");

            element.type = "button";
            element.value = 'MON ' + startHr + ":" + startMinTens + startMinOnes + "-" + endHr + ":" + endMinTens + endMinOnes;
            element.id = element.value;
            Sched.appendChild(element);
            Sched.appendChild(br);
        }
        else if (day == 'TUE') {
            var Sched = document.getElementById("TueSchedTemp");
            var element = document.createElement("input");

            element.type = "button";
            element.value = 'TUE ' + startHr + ":" + startMinTens + startMinOnes + "-" + endHr + ":" + endMinTens + endMinOnes;
            element.id = element.value;
            Sched.appendChild(element);
            Sched.appendChild(br);
        }
        else if (day == 'WED') {
            var Sched = document.getElementById("WedSchedTemp");
            var element = document.createElement("input");

            element.type = "button";
            element.value = 'WED ' + startHr + ":" + startMinTens + startMinOnes + "-" + endHr + ":" + endMinTens + endMinOnes;
            element.id = element.value;
            Sched.appendChild(element);
            Sched.appendChild(br);
        }
        else if (day == 'THU') {
            var Sched = document.getElementById("ThuSchedTemp");
            var element = document.createElement("input");

            element.type = "button";
            element.value = 'THU ' + startHr + ":" + startMinTens + startMinOnes + "-" + endHr + ":" + endMinTens + endMinOnes;
            element.id = element.value;
            Sched.appendChild(element);
            Sched.appendChild(br);
        }
        else if (day == 'FRI') {
            var Sched = document.getElementById("FriSchedTemp");
            var element = document.createElement("input");

            element.type = "button";
            element.value = 'FRI ' + startHr + ":" + startMinTens + startMinOnes + "-" + endHr + ":" + endMinTens + endMinOnes;
            element.id = element.value;
            Sched.appendChild(element);
            Sched.appendChild(br);
        }
        else if (day == 'SAT') {
            var Sched = document.getElementById("SatSchedTemp");
            var element = document.createElement("input");

            element.type = "button";
            element.value = 'SAT ' + startHr + ":" + startMinTens + startMinOnes + "-" + endHr + ":" + endMinTens + endMinOnes;
            element.id = element.value;
            Sched.appendChild(element);
            Sched.appendChild(br);
        }

        element.onclick = function () { // Note this is a function
            //alert("Delete?");


            if (confirm("Do you want to delete?") == true) {
                //element.parentNode.removeChile(element);
                document.getElementById(element.id).remove();

            } else {

            }
        };
    }
</script>

<b>@Html.ActionLink("Account Information", "Profile", "Account") > Edit Contact Schedule of @Model.FirstName @Model.LastName</b>
<br />
<table width="100%" style="text-align:center">
    
    <tr>
        <td>
            
            @using ((Html.BeginForm("Save", "Contact", FormMethod.Post, new { id = "contactSchedulesForm" })))
            {
                @Html.AntiForgeryToken()
                @Html.ValidationSummary(true)





                @Html.HiddenFor(model => model.sched)
                @Html.HiddenFor(model => model.ContactId)
                @Html.HiddenFor(model => model.Email)
                @Html.HiddenFor(model => model.FirstName)
                @Html.HiddenFor(model => model.fkUserId)
                @Html.HiddenFor(model => model.LastName)
                @Html.HiddenFor(model => model.Mobile)
                @Html.HiddenFor(model => model.Rank)
                @Html.HiddenFor(model => model.Relationship)
                @Html.HiddenFor(model => model.type)

                <input type="hidden" value="@userId" id="fkUserId" name="fkUserId" />

                @*Html.CheckBoxFor(m => m.canContactOutside) Can contact outside schedule?*@

                <text>Day</text>
                @Html.DropDownList("dayType", new SelectList(daysType, "Value", "Text"));
                <span></span>
                <text>Start time:</text>
                @Html.DropDownList("startHourType", new SelectList(hoursType, "Value", "Text"));
                <text>:</text>
                @Html.DropDownList("startMinTensType", new SelectList(minsTensType, "Value", "Text"));
                @Html.DropDownList("startMinOnesType", new SelectList(minsOnesType, "Value", "Text"));
                <span></span>
                <text>End time:</text>
                @Html.DropDownList("endHourType", new SelectList(hoursType, "Value", "Text"));
                <text>:</text>
                @Html.DropDownList("endMinTensType", new SelectList(minsTensType, "Value", "Text"));
                @Html.DropDownList("endMinOnesType", new SelectList(minsOnesType, "Value", "Text"));
                <span></span>
                <input type="button" value="Add Schedule" onclick="parseSchedule()" />
                <input type="button" value="Save" onclick="submitForm()" />
                

            }
        </td>

    </tr>
</table>


<br />





<p class="pitch-list__content" id="legend">

    @foreach (var item in contacts)
    {


        <span id="span@{@item.ContactId}" style="width: 15px; height: 15px; margin:auto; display: inline-block; border: 1px solid gray; vertical-align: middle; border-radius: 2px; background: @colors[item.ContactId%10] "></span>

        <b>@item.FirstName @item.LastName | </b>

    }

</p>

<table style="width:100%;margin:2px;padding:2px;">
    <tr>
        <th style="border-bottom: 1px solid #000; border-top: 1px solid #000; border-left: 1px solid #000;">TIME</th>

        <th style="border-bottom: 1px solid #000; border-top: 1px solid #000">SUNDAY</th>
        <th style="border-bottom: 1px solid #000; border-top: 1px solid #000">MONDAY</th>
        <th style="border-bottom: 1px solid #000; border-top: 1px solid #000">TUESDAY</th>
        <th style="border-bottom: 1px solid #000; border-top: 1px solid #000">WEDNESDAY</th>
        <th style="border-bottom: 1px solid #000; border-top: 1px solid #000">THURSDAY</th>
        <th style="border-bottom: 1px solid #000; border-top: 1px solid #000">FRIDAY</th>
        <th style="border-bottom: 1px solid #000; border-top: 1px solid #000; border-right: 1px solid #000;">SATURDAY</th>

    </tr>
    <tr>
        <td width="16%"></td>
        <td width="12%"></td>
        <td width="12%"></td>
        <td width="12%"></td>
        <td width="12%"></td>
        <td width="12%"></td>
        <td width="12%"></td>
        <td width="12%"></td>
    </tr>
    <tr>
        <td style="border-bottom: 1px solid #ddd; border-left: 1px solid #ddd; border-right: 1px solid #ddd; text-align:center">@Model.FirstName @Model.LastName's Schedule</td>
        <td id="SunSchedTemp" style="border-bottom: 1px solid #ddd; border-left: 1px solid #ddd; border-right: 1px solid #ddd; text-align:center"></td>
        <td id="MonSchedTemp" style="border-bottom: 1px solid #ddd; border-left: 1px solid #ddd; border-right: 1px solid #ddd; text-align:center"></td>
        <td id="TueSchedTemp" style="border-bottom: 1px solid #ddd; border-left: 1px solid #ddd; border-right: 1px solid #ddd; text-align:center"></td>
        <td id="WedSchedTemp" style="border-bottom: 1px solid #ddd; border-left: 1px solid #ddd; border-right: 1px solid #ddd; text-align:center"></td>
        <td id="ThuSchedTemp" style="border-bottom: 1px solid #ddd; border-left: 1px solid #ddd; border-right: 1px solid #ddd; text-align:center"></td>
        <td id="FriSchedTemp" style="border-bottom: 1px solid #ddd; border-left: 1px solid #ddd; border-right: 1px solid #ddd; text-align:center"></td>
        <td id="SatSchedTemp" style="border-bottom: 1px solid #ddd; border-left: 1px solid #ddd; border-right: 1px solid #ddd; text-align:center"></td>
    </tr>
    @for (int i = 0; i < 24; i++)
    {
        int j = i + 1;
        string time = i.ToString() + ":00-" + j.ToString() + ":00";

        <tr>
            <td style="border-bottom: 1px solid #ddd; border-left: 1px solid #ddd; border-right: 1px solid #ddd; text-align:center">
                @time
            </td>
            <td style="border-bottom: 1px solid #ddd; border-right: 1px solid #ddd;" id="SUN@{@i;}">

                @foreach (var contact in contacts)
                {

                    try
                    {

                        string[] schedules = contact.sched.Split(',');
                        foreach (string schedule in schedules)
                        {
                            if (schedule.Contains("SUN"))
                            {
                                string timespan = schedule.Split(' ')[1];
                                string startTime = timespan.Split('-')[0];
                                string endTime = timespan.Split('-')[1];
                                string startHr = startTime.Split(':')[0];
                                string endHr = endTime.Split(':')[0];
                                if (Int32.Parse(startHr) <= i && Int32.Parse(endHr) >= j)
                                {

                                    <span style="width: 15px; height: 15px; margin:auto; display: inline-block; border: 1px solid gray; vertical-align: middle; border-radius: 2px; background: @colors[contact.ContactId%10] "></span>

                                }
                            }
                        }
                    }
                    catch (Exception ex) { }

                }
            </td>
            <td style="border-bottom: 1px solid #ddd; border-right: 1px solid #ddd" id="MON@{@i;}">
                @foreach (var contact in contacts)
                {

                    try
                    {

                        string[] schedules = contact.sched.Split(',');
                        foreach (string schedule in schedules)
                        {
                            if (schedule.Contains("MON"))
                            {
                                string timespan = schedule.Split(' ')[1];
                                string startTime = timespan.Split('-')[0];
                                string endTime = timespan.Split('-')[1];
                                string startHr = startTime.Split(':')[0];
                                string endHr = endTime.Split(':')[0];
                                if (Int32.Parse(startHr) <= i && Int32.Parse(endHr) >= j)
                                {

                                    <span style="width: 15px; height: 15px; margin:auto; display: inline-block; border: 1px solid gray; vertical-align: middle; border-radius: 2px; background: @colors[contact.ContactId%10] "></span>

                                }
                            }
                        }
                    }
                    catch (Exception ex) { }

                }
            </td>
            <td style="border-bottom: 1px solid #ddd; border-right: 1px solid #ddd" id="TUE@{@i;}">
                @foreach (var contact in contacts)
                {

                    try
                    {

                        string[] schedules = contact.sched.Split(',');
                        foreach (string schedule in schedules)
                        {
                            if (schedule.Contains("TUE"))
                            {
                                string timespan = schedule.Split(' ')[1];
                                string startTime = timespan.Split('-')[0];
                                string endTime = timespan.Split('-')[1];
                                string startHr = startTime.Split(':')[0];
                                string endHr = endTime.Split(':')[0];
                                if (Int32.Parse(startHr) <= i && Int32.Parse(endHr) >= j)
                                {

                                    <span style="width: 15px; height: 15px; margin:auto; display: inline-block; border: 1px solid gray; vertical-align: middle; border-radius: 2px; background: @colors[contact.ContactId%10] "></span>

                                }
                            }
                        }
                    }
                    catch (Exception ex) { }

                }
            </td>
            <td style="border-bottom: 1px solid #ddd; border-right: 1px solid #ddd" id="WED@{@i;}">
                @foreach (var contact in contacts)
                {

                    try
                    {

                        string[] schedules = contact.sched.Split(',');
                        foreach (string schedule in schedules)
                        {
                            if (schedule.Contains("WED"))
                            {
                                string timespan = schedule.Split(' ')[1];
                                string startTime = timespan.Split('-')[0];
                                string endTime = timespan.Split('-')[1];
                                string startHr = startTime.Split(':')[0];
                                string endHr = endTime.Split(':')[0];
                                if (Int32.Parse(startHr) <= i && Int32.Parse(endHr) >= j)
                                {

                                    <span style="width: 15px; height: 15px; margin:auto; display: inline-block; border: 1px solid gray; vertical-align: middle; border-radius: 2px; background: @colors[contact.ContactId%10] "></span>

                                }
                            }
                        }
                    }
                    catch (Exception ex) { }

                }
            </td>
            <td style="border-bottom: 1px solid #ddd; border-right: 1px solid #ddd" id="THU@{@i;}">
                @foreach (var contact in contacts)
                {

                    try
                    {

                        string[] schedules = contact.sched.Split(',');
                        foreach (string schedule in schedules)
                        {
                            if (schedule.Contains("THU"))
                            {
                                string timespan = schedule.Split(' ')[1];
                                string startTime = timespan.Split('-')[0];
                                string endTime = timespan.Split('-')[1];
                                string startHr = startTime.Split(':')[0];
                                string endHr = endTime.Split(':')[0];
                                if (Int32.Parse(startHr) <= i && Int32.Parse(endHr) >= j)
                                {

                                    <span style="width: 15px; height: 15px; margin:auto; display: inline-block; border: 1px solid gray; vertical-align: middle; border-radius: 2px; background: @colors[contact.ContactId%10] "></span>

                                }
                            }
                        }
                    }
                    catch (Exception ex) { }

                }
            </td>
            <td style="border-bottom: 1px solid #ddd; border-right: 1px solid #ddd" id="FRI@{@i;}">
                @foreach (var contact in contacts)
                {

                    try
                    {

                        string[] schedules = contact.sched.Split(',');
                        foreach (string schedule in schedules)
                        {
                            if (schedule.Contains("FRI"))
                            {
                                string timespan = schedule.Split(' ')[1];
                                string startTime = timespan.Split('-')[0];
                                string endTime = timespan.Split('-')[1];
                                string startHr = startTime.Split(':')[0];
                                string endHr = endTime.Split(':')[0];
                                if (Int32.Parse(startHr) <= i && Int32.Parse(endHr) >= j)
                                {

                                    <span style="width: 15px; height: 15px; margin:auto; display: inline-block; border: 1px solid gray; vertical-align: middle; border-radius: 2px; background: @colors[contact.ContactId%10] "></span>

                                }
                            }
                        }
                    }
                    catch (Exception ex) { }

                }
            </td>
            <td style="border-bottom: 1px solid #ddd; border-right: 1px solid #ddd" id="SAT@{@i;}">
                @foreach (var contact in contacts)
                {

                    try
                    {

                        string[] schedules = contact.sched.Split(',');
                        foreach (string schedule in schedules)
                        {
                            if (schedule.Contains("SAT"))
                            {
                                string timespan = schedule.Split(' ')[1];
                                string startTime = timespan.Split('-')[0];
                                string endTime = timespan.Split('-')[1];
                                string startHr = startTime.Split(':')[0];
                                string endHr = endTime.Split(':')[0];
                                if (Int32.Parse(startHr) <= i && Int32.Parse(endHr) >= j)
                                {

                                    <span style="width: 15px; height: 15px; margin:auto; display: inline-block; border: 1px solid gray; vertical-align: middle; border-radius: 2px; background: @colors[contact.ContactId%10] "></span>

                                }
                            }
                        }
                    }
                    catch (Exception ex) { }

                }
            </td>
        </tr>
    }
</table>



@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
